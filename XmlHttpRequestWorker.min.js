/**
 * @Author: Edouard Kombo
 *
 * This class will allow you to manage unlimited WebWorkers for XmlHttpRequests purposes only
 *
 * @class XmlHttpRequestWorker
 * @constructor
 * @param Worker Html5 Worker instance
 */
function XmlHttpRequestWorker(a){a=a||window.Worker,this.url=this.getWorkerURL(),this.worker=new a(this.url)}XmlHttpRequestWorker.prototype={getWorkerScript:function(){var a="";return a+="("+this.workerInit+")(this);"},workerInit:function(a){a.onmessage=function(b){var c="";if("undefined"!=typeof b.data.params&&"object"==typeof b.data.params&&Object.keys(b.data.params).length>0){c=new FormData;for(myVar in b.data.params)c.append(myVar,b.data.params[myVar])}var d=new XMLHttpRequest;if(d.open(b.data.method,b.data.url,!0),"undefined"!=typeof b.data.requestHeader&&"object"==typeof b.data.requestHeader&&Object.keys(b.data.requestHeader).length>0)for(header in b.data.requestHeader)d.setRequestHeader(header,b.data.requestHeader[header]);d.onload=function(c){var d="undefined"!=typeof b.data.kill&&b.data.kill,e={kill:d,status:c.srcElement.status,response:c.srcElement.responseText};a.postMessage(e)},d.send(c)}},getWorkerURL:function(){var a=new Blob([this.getWorkerScript()],{type:"text/javascript"});return URL.createObjectURL(a)},kill:function(){this.worker&&this.worker.terminate(),this.url&&URL.revokeObjectURL(this.url)},send:function(a){this.worker&&this.worker.postMessage(a)},listen:function(a){this.worker&&this.worker.addEventListener("message",function(b){a(b.data)})}};